user                    nginx;
worker_processes        auto;
worker_rlimit_nofile    8192;

events {
    worker_connections  4096;
}

http {
    proxy_cache_path /tmp/NGINX_cache/ keys_zone=backcache:10m;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    upstream tomcat {
        # Use IP Hash for session persistence
        ip_hash;

        # List of Tomcat application servers
        server mifos-ms-backoffice:8443;
        #server 10.100.100.12:8080;
    }

    server {
        listen 80;
        server_name mifos.infotec.mx;

        # Redirect all HTTP requests to HTTPS
        location / {	
            return 301 https://$server_name$request_uri;
        }
    }
    
    server {
        listen 443 ssl http2;
        server_name mifos.infotec.mx;
        
        ssl_certificate /etc/ssl/certs/fullchain.pem;
	ssl_certificate_key /etc/ssl/private/privkey.pem;

        include /etc/nginx/options-ssl-nginx.conf;
        #ssl_dhparam /etc/ssl/certs/ssl-dhparams.pem;
	
	http2_push_preload on;
	
	 # Compresion de Contenido
	gzip on;
	gzip_disable "msie6";
	gzip_vary on;
	gzip_proxied any;
	gzip_comp_level 6;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;
	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
	y_cache backcache;

	
	root   /usr/share/nginx/html;
        index  index.html index.htm;
        include mime.types;
	

        # Load balance requests for /fineract-provider/ across Tomcat application servers
        location /fineract-provider/ {
            proxy_pass https://tomcat;
            proxy_cache backcache;
        }

        # Return a temporary redirect to the /fineract-provider/ directory 
        # when user requests '/'
	location / {
	    try_files $uri /index.html;
	    http2_push d3.v3.min.js;
	}
	
        # WebSocket configuration
        location /wstunnel/ {
            proxy_pass https://tomcat;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
    }
}
